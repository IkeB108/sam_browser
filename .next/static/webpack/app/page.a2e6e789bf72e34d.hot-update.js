"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/page.js":
/*!*********************!*\
  !*** ./app/page.js ***!
  \*********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calcUserHasPinchZoomed: () => (/* binding */ calcUserHasPinchZoomed),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   useSessionStateStore: () => (/* binding */ useSessionStateStore),\n/* harmony export */   useUserSettingsStore: () => (/* binding */ useUserSettingsStore),\n/* harmony export */   worksheets: () => (/* binding */ worksheets)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.1.6_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.1.6_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/.pnpm/zustand@5.0.3_react@19.0.0/node_modules/zustand/esm/react.mjs\");\n/* harmony import */ var _components_WorksheetViewer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/WorksheetViewer.js */ \"(app-pages-browser)/./app/components/WorksheetViewer.js\");\n/* harmony import */ var _components_SettingsPage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/SettingsPage.js */ \"(app-pages-browser)/./app/components/SettingsPage.js\");\n/* harmony import */ var _stores_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./stores.js */ \"(app-pages-browser)/./app/stores.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants.js */ \"(app-pages-browser)/./app/constants.js\");\n/* __next_internal_client_entry_do_not_use__ calcUserHasPinchZoomed,useSessionStateStore,useUserSettingsStore,worksheets,default auto */ \nvar _s = $RefreshSig$();\n//     ikeb108.github.io/sam_browser/out\n\n\n\n\n\n\n\n//Keys in allPages use PascalCasing to match the react component names\nconst allPages = {\n    \"WorksheetViewer\": /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_WorksheetViewer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {}, void 0, false, {\n        fileName: \"C:\\\\Users\\\\qwert\\\\Documents\\\\00_Coding\\\\sam_browser\\\\sam_browser\\\\app\\\\page.js\",\n        lineNumber: 13,\n        columnNumber: 22\n    }, undefined),\n    \"SettingsPage\": /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_SettingsPage_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}, void 0, false, {\n        fileName: \"C:\\\\Users\\\\qwert\\\\Documents\\\\00_Coding\\\\sam_browser\\\\sam_browser\\\\app\\\\page.js\",\n        lineNumber: 14,\n        columnNumber: 19\n    }, undefined)\n};\n/*\r\ncreate() is a method from the zustand module for emulating global variables.\r\n(Simpler alternative to useContext, useState, and redux).\r\n\r\ncreate() returns a \"store hook\"--a function which, when called, returns a \"store\".\r\nThe \"store\" is a state container, an object which can have any properties you want.\r\nThese properties could store data or could be updater functions (called \"actions\"), \r\nwhich can change as many or as few data properties as we want.\r\n\r\ncreate() accepts a function (a \"store initializer\"). The store initializer return an object\r\nwhich has all the properties and actions we want our store to have.\r\n\r\n\"Store hooks\" should be declared with const in the global scope.\r\nThey can be attached to the \"window\" object to make them accessible in the browser console.\r\n\"Store hooks\" can only be *called* inside a React component (React hooks are meant to trigger a component re-render).\r\nTo access the store outside a component, call myStoreHook.getState(). From there, you can read\r\nthe store's properties and call the store's actions.\r\n\r\n*/ // const createAllStudentsStore = function(set){ //Store initializer\n//   /*Zustand passes a \"set\" function into here. We call \"set\"\n//   to update any properties in the store. When we call \"set\", we pass \"set\"\n//   a function which returns a \"partial state\", an object containing any of the properties of the store\n//   we want to change.\n//   We can optionally make that function take the previous state as a parameter.\n//   */\n//   const getAllStudentsFromLocalStorage = function(){\n//     /*This function defines the logic for the initAllStudents action (see below).\n//     This function doesn't require the previous state as a parameter.\n//     This function returns a \"partial state\" which updates the \"allStudents\" property of the store.\n//     */\n//     let allStudentsInLocalStorage = localStorage.getItem(\"allStudents\")\n//     if(allStudentsInLocalStorage !== null){\n//       //console.log(\"Found allStudents in local storage.\")\n//       return { allStudents: JSON.parse(allStudentsInLocalStorage) }\n//     } else {\n//       //console.log(\"Didn't find allStudents in local storage.\")\n//       return { allStudents: {} }\n//     }\n//   }\n//   const setAllStudentsToValue = function( newValue ){\n//     return { allStudents: newValue }\n//   }\n//   return {\n//     allStudents: {},\n//     initAllStudents: ()=> { set(getAllStudentsFromLocalStorage) }, //Action\n//     /*\n//     The initAllStudents() action is called in HomePage(), when the HomePage component\n//     is mounted for the first time. To do this, we use HomePage's useEffect() hook, pass in a function\n//     that calls initAllStudents(), and also pass in an empty dependency array [], which tells React to only\n//     run that function once when the component is mounted.\n//     */\n//    setAllStudents: (newValue) => { set( setAllStudentsToValue(newValue) ) },\n//   }\n// }\n// const useAllStudentsStore = create(createAllStudentsStore) //Returns a store hook\n//Filler data for debugging\n// const fillerStudentData = {\n//   \"1\": { //id number for the student (to avoid glitches w same-name students)\n//     \"name\": \"Student 1\",\n//     \"color\": \"pink\"\n//   },\n//   \"2\": {\n//     \"name\": \"Student 2\",\n//     \"color\": \"purple\"\n//   },\n//   \"3\": {\n//     \"name\": \"Student 3\",\n//     \"color\": \"blue\"\n//   }\n// }\n// const fillerStudentData = {}\n// if(true){\n//   let colorCycle = \"red orange yellow green cyan blue purple pink\".split(\" \")\n//   for(let i = 1; i < 100; i ++){\n//     fillerStudentData[i] = {\n//       \"name\": \"Student \" + i,\n//       \"color\": colorCycle[ (i-1) % colorCycle.length]\n//     }\n//   }\n// }\n// useAllStudentsStore.getState().setAllStudents(fillerStudentData)\nconst useSessionStateStore = (0,zustand__WEBPACK_IMPORTED_MODULE_6__.create)((set)=>({\n        // openStudents: {\n        //   \"2\": {\n        //     \"openWorksheets\": [],\n        //     \"positionInWorksheetSelectionPanel\": 0\n        //   },\n        //   \"1\": {\n        //     \"openWorksheets\": [],\n        //     \"positionInWorksheetSelectionPanel\": 1\n        //   }\n        // },\n        // highestPositionInWorksheetSelectionPanel: 1,\n        // deleteOpenStudent: (studentIDNumber)=>{\n        //   let newOpenStudents = {...useSessionStateStore.getState().openStudents}\n        //   delete newOpenStudents[studentIDNumber]\n        //   set( ()=>({ openStudents: newOpenStudents }) )\n        // },\n        // addOpenStudentToBottom: (studentIDNumber)=>{\n        //   let newOpenStudents = {...useSessionStateStore.getState().openStudents}\n        //   let highestPositionInWorksheetSelectionPanel = useSessionStateStore.getState().highestPositionInWorksheetSelectionPanel\n        //   let newOpenStudent = {\n        //     \"openWorksheets\": [],\n        //     \"positionInWorksheetSelectionPanel\": highestPositionInWorksheetSelectionPanel + 1\n        //   }\n        //   newOpenStudents[studentIDNumber] = newOpenStudent\n        //   set( ()=>({ openStudents: newOpenStudents }) )\n        //   set( () => ({ highestPositionInWorksheetSelectionPanel: highestPositionInWorksheetSelectionPanel + 1 }) )\n        // }\n        // openStudents: [\n        //   {\"openWorksheets\": [], \"studentIDNumber\": \"1\"},\n        //   {\"openWorksheets\": [], \"studentIDNumber\": \"2\"},\n        //   {\"openWorksheets\": [], \"studentIDNumber\": \"3\"},\n        //   {\"openWorksheets\": [], \"studentIDNumber\": \"other\"}\n        // ],\n        openStudents: [\n            {\n                openWorksheets: [],\n                type: \"student\",\n                name: \"Student 1\",\n                color: \"red\"\n            },\n            {\n                openWorksheets: [],\n                type: \"student\",\n                name: \"Student 2\",\n                color: \"orange\"\n            },\n            {\n                openWorksheets: [],\n                type: \"student\",\n                name: \"Student 3\",\n                color: \"yellow\"\n            },\n            {\n                openWorksheets: [],\n                type: \"other\",\n                name: \"Other\",\n                color: \"none\"\n            }\n        ],\n        numberInNameOfLastStudentAdded: 3,\n        setOpenStudents: (newValue)=>{\n            set(()=>({\n                    openStudents: newValue\n                }));\n            useSessionStateStore.getState().saveToLocalStorage();\n        },\n        deleteOpenStudent: (indexInOpenStudents)=>{\n            /*\r\n    When deleting a student, we need to update the openStudentIndex of the currentWorksheet\r\n    because the openStudents array will be shorter after the student is deleted.\r\n    To do this, we'll subtract one from the index of the currentWorksheet.openStudentIndex if\r\n    it is greater than the index of the student being deleted.\r\n    */ const indexOfStudentWithCurrentWorksheet = useSessionStateStore.getState().currentWorksheet.openStudentIndex;\n            if (indexOfStudentWithCurrentWorksheet !== null && indexOfStudentWithCurrentWorksheet > indexInOpenStudents) {\n                // If the currentWorksheet's openStudentIndex is greater than the index of the student being deleted,\n                // decrement it by 1 to maintain the correct index in the openStudents array.\n                const newCurrentWorksheet = {\n                    ...useSessionStateStore.getState().currentWorksheet\n                };\n                newCurrentWorksheet.openStudentIndex = indexOfStudentWithCurrentWorksheet - 1;\n                set(()=>({\n                        currentWorksheet: newCurrentWorksheet\n                    }));\n            }\n            // Delete the student at indexInOpenStudents from openStudents array\n            let newOpenStudents = [\n                ...useSessionStateStore.getState().openStudents\n            ];\n            newOpenStudents.splice(indexInOpenStudents, 1); //Remove the student at the specified index\n            set(()=>({\n                    openStudents: newOpenStudents\n                }));\n            useSessionStateStore.getState().saveToLocalStorage();\n        },\n        addOpenStudentToBottom: (studentName, color)=>{\n            const newStudentData = {\n                openWorksheets: [],\n                type: \"student\",\n                name: studentName,\n                color: color\n            };\n            //Add newStudentData as second to last student in openStudents\n            let newOpenStudents = [\n                ...useSessionStateStore.getState().openStudents\n            ];\n            newOpenStudents.splice(newOpenStudents.length - 1, 0, newStudentData);\n            set(()=>({\n                    openStudents: newOpenStudents\n                }));\n            useSessionStateStore.getState().saveToLocalStorage();\n        },\n        currentPage: \"WorksheetViewer\",\n        setCurrentPage: (newValue)=>{\n            set(()=>({\n                    currentPage: newValue\n                }));\n            useSessionStateStore.getState().saveToLocalStorage();\n        },\n        currentWorksheet: {\n            openStudentIndex: null,\n            worksheetIndex: null\n        },\n        setCurrentWorksheet: (openStudentIndex, worksheetIndex)=>{\n            set(()=>({\n                    currentWorksheet: {\n                        openStudentIndex: openStudentIndex,\n                        worksheetIndex: worksheetIndex\n                    }\n                }));\n            useSessionStateStore.getState().saveToLocalStorage();\n        },\n        getCurrentWorksheetID: ()=>{\n            const { openStudents, currentWorksheet } = useSessionStateStore.getState();\n            if (currentWorksheet.openStudentIndex === null || currentWorksheet.worksheetIndex === null) return null;\n            return openStudents[currentWorksheet.openStudentIndex].openWorksheets[currentWorksheet.worksheetIndex].id;\n        },\n        userIsMovingCurrentWorksheet: false,\n        setUserIsMovingCurrentWorksheet: (newValue)=>{\n            set(()=>({\n                    userIsMovingCurrentWorksheet: newValue\n                }));\n        },\n        userCanClickAnywhereToDisableMovingCurrentWorksheet: false,\n        setUserCanClickAnywhereToDisableMovingCurrentWorksheet: (newValue)=>{\n            set(()=>({\n                    userCanClickAnywhereToDisableMovingCurrentWorksheet: newValue\n                }));\n        },\n        currentPageOfWorksheet: 0,\n        setCurrentPageOfWorksheet: (newValue)=>{\n            set(()=>({\n                    currentPageOfWorksheet: newValue\n                }));\n            const { openStudents, currentWorksheet } = useSessionStateStore.getState();\n            if (currentWorksheet.openStudentIndex !== null && currentWorksheet.worksheetIndex !== null) {\n                openStudents[currentWorksheet.openStudentIndex].openWorksheets[currentWorksheet.worksheetIndex].pageLeftOff = newValue;\n                set({\n                    openStudents: [\n                        ...openStudents\n                    ]\n                });\n            }\n            useSessionStateStore.getState().saveToLocalStorage();\n        },\n        allowArrowKeysForPageNavigation: true,\n        setAllowArrowKeysForPageNavigation: (newValue)=>{\n            set(()=>({\n                    allowArrowKeysForPageNavigation: newValue\n                }));\n        },\n        saveToLocalStorage: ()=>{\n            const sessionState = useSessionStateStore.getState();\n            //Store only the following values in local storage\n            const partialSessionState = {\n                openStudents: sessionState.openStudents,\n                currentPage: sessionState.currentPage,\n                currentWorksheet: sessionState.currentWorksheet,\n                currentPageOfWorksheet: sessionState.currentPageOfWorksheet\n            };\n            localStorage.setItem(\"sessionState\", JSON.stringify(partialSessionState));\n        },\n        loadFromLocalStorage: ()=>{\n            const sessionStateFromLocalStorage = localStorage.getItem(\"sessionState\");\n            if (sessionStateFromLocalStorage !== null) {\n                console.log(\"loading sessionstate from local storage\");\n                const partialSessionState = JSON.parse(sessionStateFromLocalStorage);\n                set(()=>({\n                        openStudents: partialSessionState.openStudents,\n                        currentPage: partialSessionState.currentPage,\n                        currentWorksheet: partialSessionState.currentWorksheet,\n                        currentPageOfWorksheet: partialSessionState.currentPageOfWorksheet\n                    }));\n            }\n        }\n    }));\nconst useUserSettingsStore = (0,zustand__WEBPACK_IMPORTED_MODULE_6__.create)((set)=>({\n        //settings go here\n        pageView: \"double\",\n        setPageView: (newValue)=>{\n            set(()=>({\n                    pageView: newValue\n                }));\n        },\n        madisonMode: false,\n        setMadisonMode: (newValue)=>{\n            set(()=>({\n                    madisonMode: newValue\n                }));\n        }\n    }));\nfunction calcUserHasPinchZoomed() {\n    //calculates whether the user has pinch zoomed on the page\n    return window.visualViewport.scale !== 1;\n}\nfunction updateUserHasPinchZoomedOnResize() {\n    //If the user has pinch zoomed, set the store to true,\n    //but only if it's not already set to true. Otherwise, setting it to true\n    //would cause unnecessary rerenders of the entire HomePage during every frame of pinch zoom gesture.\n    if (calcUserHasPinchZoomed()) {\n        if (!_stores_js__WEBPACK_IMPORTED_MODULE_4__.useUserHasPinchZoomedStore.getState().userHasPinchZoomed) {\n            _stores_js__WEBPACK_IMPORTED_MODULE_4__.useUserHasPinchZoomedStore.getState().setUserHasPinchZoomed(true);\n        }\n    }\n//If the user has not pinch zoomed, the userHasPinchZoomed state shouldn't be set to false until touchend.\n//Otherwise, the user could trigger drag events while pinch zooming if it's zoomed all the way out.\n}\nconst worksheets = {};\nfunction HomePage() {\n    _s();\n    const { userHasPinchZoomed } = (0,_stores_js__WEBPACK_IMPORTED_MODULE_4__.useUserHasPinchZoomedStore)();\n    const { pageView } = useUserSettingsStore();\n    //The function in this useEffect will run every time HomePage is rerendered,\n    //which will happen every time userHasPinchZoomed changes, which should be\n    //at the start and end of pinch zoom gestures, but not in between.\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"HomePage.useEffect\": ()=>{\n            //These event listeners get added every time the component is rerendered.\n            //To prevent event listeners from accumulating, they get removed when the component unmounts\n            //via the cleanup function that is returned below.\n            window.visualViewport.addEventListener(\"resize\", updateUserHasPinchZoomedOnResize);\n            document.addEventListener(\"touchend\", onDocumentTouchEndOrMouseUp);\n            document.addEventListener(\"mouseup\", onDocumentTouchEndOrMouseUp);\n            updateUserHasPinchZoomedOnResize();\n            if (window.location.href.includes(\"?eruda=true\")) {\n                /*\r\n      Eruda is a module for adding virtual devtools to a webpage for mobile debugging.\r\n      Eruda expects to be run in-browser, so it needs to be imported dynamically\r\n      from within a component like HomePage with useEffect. It's not enough to\r\n      just import it at the top of a file that says 'use client'.\r\n      The reason that we're importing this differently from how Eruda recommends\r\n      in docs is because Eruda doesn't necessarily expect to be used in a\r\n      React/Nextjs app.\r\n      \r\n      For Android, we can use chrome://inspect/#devices to do remote debugging for\r\n      Chrome, but not for other browsers.\r\n      https://developer.chrome.com/docs/devtools/remote-debugging\r\n      \r\n      However, the port-forwarding feature of chrome://inspect/#devices can be\r\n      used on any web browser on the Android device, which allows us to run the\r\n      webpage from \"npm run dev\" instead of having to build first.\r\n      \r\n      ^ It seems like this often requires opening the page in Chrome first before\r\n      then opening the page in the other browser for some reason.\r\n      */ __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_pnpm_eruda_3_4_1_node_modules_eruda_eruda_js\").then(__webpack_require__.t.bind(__webpack_require__, /*! eruda */ \"(app-pages-browser)/./node_modules/.pnpm/eruda@3.4.1/node_modules/eruda/eruda.js\", 23)).then({\n                    \"HomePage.useEffect\": (module)=>{\n                        module.default.init();\n                    }\n                }[\"HomePage.useEffect\"]);\n            }\n            // window.eruda = eruda\n            return ({\n                \"HomePage.useEffect\": ()=>{\n                    window.visualViewport.removeEventListener(\"resize\", updateUserHasPinchZoomedOnResize);\n                    document.removeEventListener(\"touchend\", onDocumentTouchEndOrMouseUp);\n                    document.removeEventListener(\"mouseup\", onDocumentTouchEndOrMouseUp);\n                }\n            })[\"HomePage.useEffect\"];\n        }\n    }[\"HomePage.useEffect\"], []);\n    const homePageStyle = {\n        fontFamily: \"Roboto, sans-serif\",\n        fontWeight: \"normal\",\n        fontSize: \"18px\",\n        height: \"100%\",\n        width: \"100%\",\n        maxWidth: pageView == \"double\" ? \"1500px\" : \"1000px\",\n        color: _constants_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].nearBlackColor,\n        // touchAction: userHasPinchZoomed ? \"auto\" : \"pinch-zoom\", \n        margin: \"0 auto\"\n    };\n    // const sessionStateStore = useSessionStateStore()\n    const currentPage = useSessionStateStore({\n        \"HomePage.useSessionStateStore[currentPage]\": (state)=>state.currentPage\n    }[\"HomePage.useSessionStateStore[currentPage]\"]);\n    if (currentPage == \"WorksheetViewer\") {\n        homePageStyle.touchAction = userHasPinchZoomed ? \"auto\" : \"pinch-zoom\" //If the user has pinch zoomed, allow panning. If not, disable panning\n        ;\n    }\n    /*\r\n  When HomePage mounts for the first time, initialize allStudentsStore by grabbing\r\n  allStudents from localStorage. Pass an empty dependency array [] into useEffect to tell React\r\n  to only run this code the first time HomePage mounts.\r\n  */ (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"HomePage.useEffect\": ()=>{\n            //useAllStudentsStore.getState().initAllStudents();\n            window.useSessionStateStore = useSessionStateStore;\n            window.useUserSettingsStore = useUserSettingsStore;\n            //On page load, retrieve worksheets from IndexedDB if any. This function is imported from SettingsPage.js\n            (0,_components_SettingsPage_js__WEBPACK_IMPORTED_MODULE_3__.retrieveWorksheetsFromIndexedDB)();\n        }\n    }[\"HomePage.useEffect\"], []);\n    /*\r\n  The dependency array we pass into useEffect tells React which variables to look\r\n  for changes in. When any of these variables change, the function in useEffect() is\r\n  triggered. Empty = run only once (on component mount).\r\n  */ const onClick = function() {\n        if (currentPage == \"WorksheetViewer\") {\n            const { userIsMovingCurrentWorksheet, userCanClickAnywhereToDisableMovingCurrentWorksheet } = useSessionStateStore.getState();\n            const { userJustClickedMove } = _stores_js__WEBPACK_IMPORTED_MODULE_4__.useUserJustClickedMoveStore.getState();\n            if (!userJustClickedMove && userIsMovingCurrentWorksheet && userCanClickAnywhereToDisableMovingCurrentWorksheet) {\n                const { setUserIsMovingCurrentWorksheet, setUserCanClickAnywhereToDisableMovingCurrentWorksheet } = useSessionStateStore.getState();\n                setUserIsMovingCurrentWorksheet(false);\n                setUserCanClickAnywhereToDisableMovingCurrentWorksheet(false);\n            }\n        // if(sessionStateStore.userIsMovingCurrentWorksheet && sessionStateStore.userCanClickAnywhereToDisableMovingCurrentWorksheet){\n        //   console.log(\"set to false\")\n        //   sessionStateStore.setUserIsMovingCurrentWorksheet(false)\n        //   sessionStateStore.setUserCanClickAnywhereToDisableMovingCurrentWorksheet(false)\n        // }\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: homePageStyle,\n        onClick: onClick,\n        children: allPages[currentPage]\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\qwert\\\\Documents\\\\00_Coding\\\\sam_browser\\\\sam_browser\\\\app\\\\page.js\",\n        lineNumber: 377,\n        columnNumber: 5\n    }, this);\n}\n_s(HomePage, \"yxx9c7NOQrvQ1a8jmkeW3XNjpAA=\", false, function() {\n    return [\n        _stores_js__WEBPACK_IMPORTED_MODULE_4__.useUserHasPinchZoomedStore,\n        useUserSettingsStore,\n        useSessionStateStore\n    ];\n});\n_c = HomePage;\nconst onDocumentTouchEndOrMouseUp = function() {\n    updateUserHasPinchZoomedIfChanged(false);\n};\nfunction updateUserHasPinchZoomedIfChanged(callAgainBoolean) {\n    //Update userhaspinchzoomed store, but only if the value has changed.\n    //(to prevent unnecessary rerenders)\n    const newUserHasPinchZoomed = calcUserHasPinchZoomed();\n    const oldUserHasPinchZoomed = _stores_js__WEBPACK_IMPORTED_MODULE_4__.useUserHasPinchZoomedStore.getState().userHasPinchZoomed;\n    if (oldUserHasPinchZoomed !== newUserHasPinchZoomed) {\n        _stores_js__WEBPACK_IMPORTED_MODULE_4__.useUserHasPinchZoomedStore.getState().setUserHasPinchZoomed(newUserHasPinchZoomed);\n    }\n    if (callAgainBoolean) setTimeout(updateUserHasPinchZoomedIfChanged(false), 1000);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HomePage);\nvar _c;\n$RefreshReg$(_c, \"HomePage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.js\n"));

/***/ })

});